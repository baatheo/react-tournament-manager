{"version":3,"sources":["Pages/Form.jsx","Pages/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["allTeams","FormToAddTeam","deleteTeams","e","preventDefault","splice","length","teamsToDisplay","setState","addTeam","newTeam","name","state","nameOfTheTeam","value","amount","amountOfPlayers","push","Form","Row","Group","as","Col","controlId","Label","Control","ref","input","type","placeholder","Button","onClick","this","variant","teams","React","TeamList","console","log","Table","striped","bordered","hover","map","team","index","NavyBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","inline","FormControl","Component","MiddleLayout","LeftLayout","RightLayout","Layout","Footer","MainPage","App","lang","charSet","src","crossOrigin","rel","integrity","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9f01062f.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst allTeams = [];\r\n\r\nexport class FormToAddTeam extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            nameOfTheTeam : \"\",\r\n            amountOfPlayers : 0,\r\n            teamsToDisplay: allTeams\r\n        }\r\n    }\r\n\r\n    deleteTeams = (e) =>{\r\n        e.preventDefault();\r\n        allTeams.splice(0,allTeams.length);\r\n        const teamsToDisplay = allTeams;\r\n        this.setState({\r\n            teamsToDisplay\r\n        })\r\n    }\r\n\r\n    addTeam = (e) =>{\r\n        e.preventDefault();\r\n        let newTeam ={\r\n            name: this.state.nameOfTheTeam.value,\r\n            amount: this.state.amountOfPlayers.value\r\n        }\r\n        let smallteam = this.state.nameOfTheTeam.value;\r\n        allTeams.push(newTeam);\r\n        const teamsToDisplay = allTeams;\r\n        this.setState({\r\n            teamsToDisplay\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n              <Form>\r\n                  <Form.Row>\r\n                      <Form.Group as={Col} controlId = \"nameOfTheTeam\">\r\n                          <Form.Label>Podaj nazwę drużyny</Form.Label>\r\n                          <Form.Control ref={input =>this.state.nameOfTheTeam = input} type=\"text\" placeholder=\"Name of your Team\"/>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} controlId = \"amountOfPeople\">\r\n                          <Form.Label>Amount of Players</Form.Label>\r\n                          <Form.Control ref={input =>this.state.amountOfPlayers = input} type=\"number\" placeholder=\"Amount of Players\"/>\r\n                      </Form.Group>\r\n                  </Form.Row>\r\n                  <Button onClick={this.addTeam} variant=\"primary\" type=\"submit\">\r\n                      Submit\r\n                  </Button>\r\n                  <Button onClick={this.deleteTeams} variant=\"danger\" type=\"submit\">Clear</Button>\r\n              </Form>\r\n              <TeamList teams={allTeams}/>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DisplayTeams extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            teamsToDisplay: allTeams\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <TeamList teams={allTeams}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst TeamList = ({teams}) => {\r\n    console.log(teams);\r\n    if (teams.length > 0) {\r\n        return (\r\n            <Table striped bordered hover variant=\"light\">\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Name Of The Team</th>\r\n                    <th>Amount Of Players</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {teams.map((team,index) =>\r\n                        <tr><td>{index+1}</td><td>{team.name}</td><td>{team.amount}</td></tr>)}\r\n                </tbody>\r\n            </Table>\r\n\r\n        );\r\n    }\r\n    else return(\r\n        <p>No results!</p>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {DisplayTeams, FormToAddTeam} from \"./Form\";\r\nimport \"../styles/style1.css\"\r\n\r\nclass NavyBar extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"#home\">Tournament's Manager</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                            <Button variant=\"outline-danger\">Search</Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MiddleLayout extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className=\"text-center\">Add Team to the tournament</h1>\r\n                <FormToAddTeam/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass LeftLayout extends React.Component{\r\n    render(){\r\n        return(\r\n            <h1>Left Layout</h1>\r\n        );\r\n    }\r\n}\r\n\r\nclass RightLayout extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Right Layout</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Layout extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-2 bg-dark rounded-top\">\r\n                    <LeftLayout/>\r\n                </div>\r\n                <div className=\"col-8 rounded-top\">\r\n                    <MiddleLayout/>\r\n                </div>\r\n                <div className=\"col-2 bg-dark rounded-top\">\r\n                    <RightLayout/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"fixed-bottom\">\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand>Projekt Zespołowy wykonany przez Bartosza Porębskiego oraz Jakuba Florczaka</Navbar.Brand>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport class MainPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <NavyBar/>\r\n                <Layout/>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport {MainPage} from \"./Pages/MainPage\";\n\n\nfunction App() {\n  return (\n      <html lang=\"pl\">\n      <head>\n        <meta charSet=\"UTF-8\"/>\n        <title>My React learning</title>\n        <script src=\"https://unpkg.com/react/umd/react.development.js\"/>\n        <script src=\"https://unpkg.com/react-dom/umd/react-dom.development.js\"/>\n        <script src=\"https://unpkg.com/babel-standalone/babel.js\"/>\n        <script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossOrigin/>\n        <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n            integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n            crossOrigin=\"anonymous\"\n        />\n      </head>\n      <body>\n        <div className=\"App\">\n          <MainPage/>\n        </div>\n      </body>\n      </html>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}